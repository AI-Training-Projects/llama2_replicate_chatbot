import os
import logging
from dotenv import load_dotenv
from datetime import datetime
import time
import replicate

# Load environment variables from .env file
load_dotenv()

# Set up logging
logging.basicConfig(filename="replicate_app.log", level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

# Retrieve API keys from environment variables
replicate_api = os.getenv("REPLICATE_API_TOKEN")

# Check if API keys are loaded
if not replicate_api:
    logging.error("Replicate API token not found in environment variables.")
    raise ValueError("Replicate API token not found. Please check your .env file.")
else:
    logging.info("Replicate API token loaded successfully.")

# Define input parameters
input_parameters = {
    "top_p": 1,
    "prompt": "Write a story in the style of James Joyce. The story should be about a trip to the Irish countryside in 2083, to see the beautiful scenery and the AI robots that are tending the farms, harvesting crops, and managing the environment.",
    "temperature": 0.75,
    "max_new_tokens": 5000
}
timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")

# Function to write output to a time-stamped file with retries
def write_output_to_file(content):
    #timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"Ireland_2083_Shortstory_{timestamp}.md"
    retries = 3
    for attempt in range(retries):
        try:
            with open(filename, "w") as file:
                file.write(content)
            logging.info(f"Output successfully written to {filename}")
            print(f"Output successfully written to {filename}")
            break
        except Exception as e:
            logging.error(f"Error writing to file {filename}: {e}")
            print(f"Error writing to file {filename}: {e}")
            if attempt < retries - 1:
                logging.info("Retrying...")
                print("Retrying...")
                time.sleep(1)
            else:
                logging.error("Failed to write output after 3 attempts.")
                print("Failed to write output after 3 attempts.")
                raise

# Generate LLM response
response = ""
try:
    for event in replicate.stream("meta/llama-2-13b-chat", input=input_parameters):
        event_content = str(event)
        logging.info(f"Received event: {event_content}")
        print(f"Received event: {event_content}")
        response += event_content
    logging.info(f"LLM response generated successfully. Response length: {len(response)}")
    print(f"LLM response generated successfully. Response length: {len(response)}")
except Exception as e:
    logging.error(f"Error generating LLM response: {e}")
    print(f"Error generating LLM response: {e}")
    logging.info(f"Response length at error: {len(response)}")
    print(f"Response length at error: {len(response)}")
    raise

# Format the response in Markdown

filename = f"Ireland_2083_Shortstory_{timestamp}.md"
formatted_response = f"""
# Prompt Profile
- **Filename**: {filename}
- **Datetime**: {timestamp}
- **Model Name**: meta/llama-2-13b-chat
- **Top P**: {input_parameters['top_p']}
- **Temperature**: {input_parameters['temperature']}
- **Max New Tokens**: {input_parameters['max_new_tokens']}
- **Prompt**: {input_parameters['prompt']}

# Response
{response}
"""

# Save the formatted response to a time-stamped file
write_output_to_file(formatted_response)

# Generated by Rich Lysakowski